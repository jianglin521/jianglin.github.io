(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{196:function(e,t,s){"use strict";s.r(t);var n=s(0),r=Object(n.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),s("p",[s("a",{attrs:{href:"https://yeasy.gitbook.io/docker_practice/install/centos",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker安装教程"),s("OutboundLink")],1)]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._m(5),e._v(" "),s("p",[e._v("执行以下命令安装依赖包：")]),e._v(" "),e._m(6),s("p",[e._v("鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._m(12),e._v(" "),e._m(13),e._m(14),e._v(" "),s("p",[e._v("默认情况下，"),s("code",[e._v("docker")]),e._v(" 命令会使用 "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Unix_domain_socket",target:"_blank",rel:"noopener noreferrer"}},[e._v("Unix socket"),s("OutboundLink")],1),e._v(" 与 Docker 引擎通讯。而只有 "),s("code",[e._v("root")]),e._v(" 用户和 "),s("code",[e._v("docker")]),e._v(" 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 "),s("code",[e._v("root")]),e._v(" 用户。因此，更好地做法是将需要使用 "),s("code",[e._v("docker")]),e._v(" 的用户加入 "),s("code",[e._v("docker")]),e._v(" 用户组。")]),e._v(" "),e._m(15),e._v(" "),e._m(16),e._m(17),e._v(" "),e._m(18),s("p",[e._v("退出当前终端并重新登录，进行如下测试。")]),e._v(" "),e._m(19),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/fuzongle/p/12834080.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("jenkins安装教程"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("1.启动docker，下载Jenkins镜像文件")]),e._v(" "),e._m(20),s("p",[e._v("2.创建Jenkins挂载目录并授权权限")]),e._v(" "),e._m(21),s("p",[e._v("3.创建并启动Jenkins容器")]),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),e._m(24),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),e._m(27),e._v(" "),e._m(28),s("p",[e._v("4.查看jenkins是否启动成功，如下图出现端口号，就为启动成功了")]),e._v(" "),e._m(29),s("p",[e._v("5.查看docker容器日志")]),e._v(" "),e._m(30),e._m(31),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),e._v(" "),e._m(36),e._m(37),e._v(" "),e._m(38),e._m(39),e._v(" "),e._m(40),e._v(" "),e._m(41),e._v(" "),e._m(42),e._v(" "),e._m(43),e._v(" "),s("p",[e._v("Dockerfile文件")]),e._v(" "),e._m(44),s("p",[e._v("生成镜像")]),e._v(" "),e._m(45),s("p",[e._v("创建实例")]),e._v(" "),e._m(46),s("p",[e._v("常用的命令")]),e._v(" "),e._m(47),e._m(48),e._v(" "),e._m(49)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"vue自动部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue自动部署","aria-hidden":"true"}},[this._v("#")]),this._v(" vue自动部署")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"docker安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker安装","aria-hidden":"true"}},[this._v("#")]),this._v(" docker安装")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"卸载旧版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#卸载旧版本","aria-hidden":"true"}},[this._v("#")]),this._v(" 卸载旧版本")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("旧版本的 Docker 称为 "),t("code",[this._v("docker")]),this._v(" 或者 "),t("code",[this._v("docker-engine")]),this._v("，使用以下命令卸载旧版本：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ sudo yum remove docker \\\n                  docker-client \\\n                  docker-client-latest \\\n                  docker-common \\\n                  docker-latest \\\n                  docker-latest-logrotate \\\n                  docker-logrotate \\\n                  docker-selinux \\\n                  docker-engine-selinux \\\n                  docker-engine\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"使用-yum-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-yum-安装","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 yum 安装")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ sudo yum install -y yum-utils\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("执行下面的命令添加 "),t("code",[this._v("yum")]),this._v(" 软件源：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n$ sudo sed -i 's/download.docker.com/mirrors.aliyun.com\\/docker-ce/g' /etc/yum.repos.d/docker-ce.repo\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装 Docker")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("更新 "),t("code",[this._v("yum")]),this._v(" 软件源缓存，并安装 "),t("code",[this._v("docker-ce")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ sudo yum install docker-ce docker-ce-cli containerd.io\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"启动-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动-docker","aria-hidden":"true"}},[this._v("#")]),this._v(" 启动 Docker")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ sudo systemctl enable docker\n$ sudo systemctl start docker\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"建立-docker-用户组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建立-docker-用户组","aria-hidden":"true"}},[this._v("#")]),this._v(" 建立 docker 用户组")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("建立 "),t("code",[this._v("docker")]),this._v(" 组：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ sudo groupadd docker\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("将当前用户加入 "),t("code",[this._v("docker")]),this._v(" 组：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ sudo usermod -aG docker $USER\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"jenkins安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins安装","aria-hidden":"true"}},[this._v("#")]),this._v(" jenkins安装")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("docker pull jenkins/jenkins\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("mkdir -p /jenkins_home\nchmod 777 /jenkins_home\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("-d 后台运行镜像")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("-p 10000:8080 将镜像的8080端口映射到服务器的10240端口。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("-p 10001:50000 将镜像的50000端口映射到服务器的10241端口")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("-v  /jenkins_home:/var/jenkins_home 目录为容器jenkins工作目录，我们将硬盘上的一个目录挂载到这个位置，方便后续更新镜像后继续使用原来的工作目录。这里我们设置的就是上面我们创建的 /jenkins_home目录")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("-v /etc/localtime:/etc/localtime让容器使用和服务器同样的时间设置。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("--name myjenkins 给容器起一个别名")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("docker run --restart=always \\\n  -d --name myjenkins \\\n  -p 10000:8080 \\\n  -p 10001:50000 \\\n  -v /jenkins_home:/var/jenkins_home \\\n  -v /etc/localtime:/etc/localtime \\\n  jenkins/jenkins\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("docker ps -l\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("docker logs myjenkins\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"jenkins项目配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins项目配置","aria-hidden":"true"}},[this._v("#")]),this._v(" jenkins项目配置")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("用到的插件")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[this._v("Git Parameter - git参数化构建")]),this._v(" "),t("li",[this._v("Publish Over SSH - 连接远程服务器")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("项目配置")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[this._v("执行shell文件")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("cd $WORKSPACE\npwd\nnode -v\nnpm -v\nnpm install cnpm -g --registry=https://registry.npm.taobao.org\ncnpm install\nnpm run build\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",{attrs:{start:"2"}},[t("li",[this._v("SSH Publishers配置")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("cd ./dockerWeb/jenkins\ncp ./config/docker-deploy.sh  docker-deploy.sh\nchmod 777 ./docker-deploy.sh\n./docker-deploy.sh 6001\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("示例图片")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://gitee.com/jianglin521/picgoImg/raw/master/img/20210922162057.png",alt:"图片1"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://gitee.com/jianglin521/picgoImg/raw/master/img/20210922162057.png",alt:"图片2"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://gitee.com/jianglin521/picgoImg/raw/master/img/20210922162307.png",alt:"图片2"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue项目打包docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue项目打包docker","aria-hidden":"true"}},[this._v("#")]),this._v(" vue项目打包docker")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('#FROM node:12-alpine as build-stage\n#WORKDIR /build\n#RUN npm config set registry https://registry.npm.taobao.org\n#COPY package.json /build/package.json\n#RUN npm install\n#COPY ./ /build\n#RUN npm run build\n#\nFROM nginx:stable-alpine as production-stage\n#COPY --from=build-stage /build/dist /usr/share/nginx/html\nCOPY /dist /usr/share/nginx/html\nCOPY /config/nginx/default.conf /etc/nginx/conf.d/default.conf\nLABEL maintainer="zhuangzhuang"\nEXPOSE 80\nCMD ["nginx", "-g", "daemon off;"]\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("sudo docker build -t vue-dome .  #vue-dome是打包镜像名称\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("sudo docker run --restart=always \\\n  -d --name vue-dome1 \\\n  -e TZ=Asia/Shanghai \\\n  -v $PWD/config/nginx/default.conf:/etc/nginx/conf.d/default.conf \\\n  -p 3500:80 \\\n  vue-dome\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("sudo docker restart vue-dome1 #重启容器\nsudo docker stop [容器id] #停止容器\nsudo docker rm [容器id] #删除容器\nsudo docker rmi [镜像id] #删除镜像\nsudo docker ps -a #查看所有容器\nsudo docker images #查看所有镜像\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"node-js实现热加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-js实现热加载","aria-hidden":"true"}},[this._v("#")]),this._v(" Node.js实现热加载")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("npm install -g nodemon \nnodemon index.js\n")])])])}],!1,null,null,null);t.default=r.exports}}]);