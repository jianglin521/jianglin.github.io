(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{186:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"常用正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用正则表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用正则表达式")]),t._v(" "),a("p",[a("strong",[t._v("验证身份证")]),t._v(" /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/")]),t._v(" "),a("p",[a("strong",[t._v("验证税号")]),t._v(" /^[A-Z0-9]{15}$|^[A-Z0-9]{17}$|^[A-Z0-9]{18}$|^[A-Z0-9]{20}$/")]),t._v(" "),a("p",[a("strong",[t._v("验证手机号")]),t._v(" /^1[3-9]\\d{9}$/")]),t._v(" "),a("p",[a("strong",[t._v("验证加密手机号")]),t._v(" /^1[3-9]\\d{1}[\\d*]{4}\\d{4}$/")]),t._v(" "),a("p",[a("strong",[t._v("验证中文")]),t._v(" /^[\\u4E00-\\u9FA5]+$/")]),t._v(" "),a("p",[a("strong",[t._v("验证中文和括号")]),t._v(' /^[\\u4E00-\\u9FA5 || "/,(,),\\（,\\）"]+$/')]),t._v(" "),a("p",[a("strong",[t._v("匹配正整数")]),t._v("  /^[1-9]\\d*$ /")]),t._v(" "),a("p",[a("strong",[t._v("匹配负整数")]),t._v("  /^-[1-9]\\d*$ /")]),t._v(" "),a("p",[a("strong",[t._v("匹配整数")]),t._v(" /^-?[1-9]\\d*$/")]),t._v(" "),a("p",[a("strong",[t._v("匹配非负整数（正整数 + 0）")]),t._v(" /^[1-9]\\d*|0$ /")]),t._v(" "),a("p",[a("strong",[t._v("匹配非正整数（负整数 + 0）")]),t._v(" /^-[1-9]\\d*|0$/")]),t._v(" "),a("p",[a("strong",[t._v("匹配正浮点数")]),t._v(" /^[1-9]\\d*.\\d*|0.\\d*[1-9]\\d*$/")]),t._v(" "),a("p",[a("strong",[t._v("匹配负浮点数")]),t._v(" /^-([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*)$ /")]),t._v(" "),a("p",[a("strong",[t._v("匹配浮点数")]),t._v(" /^-?([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*|0?.0+|0)$/")]),t._v(" "),a("p",[a("strong",[t._v("匹配非负浮点数（正浮点数 + 0）")]),t._v(" /^[1-9]\\d*.\\d*|0.\\d*[1-9]\\d*|0?.0+|0$/")]),t._v(" "),a("p",[a("strong",[t._v("匹配非正浮点数（负浮点数 + 0）")]),t._v(" /^(-([1-9]\\d*.\\d*|0.\\d*[1-9]\\d*))|0?.0+|0$/")]),t._v(" "),a("h2",{attrs:{id:"正则对金额处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则对金额处理","aria-hidden":"true"}},[t._v("#")]),t._v(" 正则对金额处理")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strFilter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{1,3}(?=(\\d{3})+$)/g")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^(\\d+)((\\.\\d+)?)$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$&,'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"手机号加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手机号加密","aria-hidden":"true"}},[t._v("#")]),t._v(" 手机号加密")]),t._v(" "),a("h3",{attrs:{id:"方法一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法一","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法一")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串截取")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("regMobile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mobile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mobile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" new_mobile "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("mobile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("****")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("mobile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" new_mobile\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"方法二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法二","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法二")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用正则")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" phone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13701134148'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" resultPhone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" phone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^(\\d{3})\\d{4}(\\d+)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1****$2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resultPhone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 137****4148")]),t._v("\n")])])]),a("h2",{attrs:{id:"加密姓名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加密姓名","aria-hidden":"true"}},[t._v("#")]),t._v(" 加密姓名")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'王小明'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=.)./g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 王**")]),t._v("\n")])])]),a("h2",{attrs:{id:"邮箱加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#邮箱加密","aria-hidden":"true"}},[t._v("#")]),t._v(" 邮箱加密")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换邮箱字符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("regEmail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" _s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" new_email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" new_email\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"test-和-match-方法的异同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-和-match-方法的异同","aria-hidden":"true"}},[t._v("#")]),t._v(" .test()和.match()方法的异同")]),t._v(" "),a("p",[t._v("test() 方法用于检测一个字符串是否匹配某个模式.")]),t._v(" "),a("p",[t._v("match() 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。")]),t._v(" "),a("p",[t._v("test和match都是字符串的方法，都可以用来判断是否匹配正则表达式。")]),t._v(" "),a("p",[a("strong",[t._v("不同的是")]),t._v("：")]),t._v(" "),a("p",[t._v("test方法返回的是布尔值true 和false")]),t._v(" "),a("p",[t._v("match方法返回的是字符串")]),t._v(" "),a("p",[a("strong",[t._v("使用")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/hello/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// match()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/ab{2,5}c/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc abbc abbbc abbbbc abbbbbc abbbbbbc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"正则表达式字符匹配攻略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式字符匹配攻略","aria-hidden":"true"}},[t._v("#")]),t._v(" 正则表达式字符匹配攻略")]),t._v(" "),a("h3",{attrs:{id:"_1-两种模糊匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-两种模糊匹配","aria-hidden":"true"}},[t._v("#")]),t._v(" 1 两种模糊匹配")]),t._v(" "),a("h4",{attrs:{id:"_1-1-横向模糊匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-横向模糊匹配","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.1 横向模糊匹配")]),t._v(" "),a("p",[t._v("横向模糊指的是，一个正则可匹配的字符串的长度不是固定的，可以是多种情况的。")]),t._v(" "),a("p",[t._v("其实现的方式是使用量词。譬如{m,n}，表示连续出现最少m次，最多n次。")]),t._v(" "),a("p",[t._v("比如"),a("code",[t._v("/ab{2,5}c/")]),t._v("表示匹配这样一个字符串：第一个字符是“a”，接下来是2到5个字符“b”，最后是字符“c”。测试如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/ab{2,5}c/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc abbc abbbc abbbbc abbbbbc abbbbbbc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["abbc", "abbbc", "abbbbc", "abbbbbc"]')]),t._v("\n")])])]),a("p",[a("strong",[t._v("注意")]),t._v("：案例中用的正则是"),a("code",[t._v("/ab{2,5}c/g")]),t._v("，后面多了g，它是正则的一个修饰符。表示全局匹配，即在目标字符串中按顺序找到满足匹配模式的所有子串，强调的是“所有”，而不只是“第一个”。g是单词global的首字母。")]),t._v(" "),a("h4",{attrs:{id:"_1-2-纵向模糊匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-纵向模糊匹配","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.2 纵向模糊匹配")]),t._v(" "),a("p",[t._v("纵向模糊指的是，一个正则匹配的字符串，具体到某一位字符时，它可以不是某个确定的字符，可以有多种可能。")]),t._v(" "),a("p",[t._v("其实现的方式是使用字符组。譬如"),a("code",[t._v("[abc]")]),t._v("，表示该字符是可以字符“a”、“b”、“c”中的任何一个。")]),t._v(" "),a("p",[t._v("比如"),a("code",[t._v("/a[123]b/")]),t._v('可以匹配如下三种字符串："a1b"、"a2b"、"a3b"。测试如下：')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/a[123]b/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a0b a1b a2b a3b a4b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["a1b", "a2b", "a3b"]')]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-字符组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符组","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 字符组")]),t._v(" "),a("h4",{attrs:{id:"_2-1-范围表示法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-范围表示法","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 范围表示法")]),t._v(" "),a("p",[t._v("如果字符组里的字符特别多的话，怎么办？可以使用范围表示法。")]),t._v(" "),a("p",[t._v("比如"),a("code",[t._v("[123456abcdefGHIJKLM]")]),t._v("，可以写成"),a("code",[t._v("[1-6a-fG-M]")]),t._v("。用连字符-来省略和简写。")]),t._v(" "),a("p",[t._v("因为连字符有特殊用途，那么要匹配“a”、“-”、“z”这三者中任意一个字符，该怎么做呢？")]),t._v(" "),a("p",[t._v("不能写成"),a("code",[t._v("[a-z]")]),t._v("，因为其表示小写字符中的任何一个字符。")]),t._v(" "),a("p",[t._v("可以写成如下的方式："),a("code",[t._v("[-az]或[az-]或[a\\-z]")]),t._v("。即要么放在开头，要么放在结尾，要么转义。总之不会让引擎认为是范围表示法就行了。")]),t._v(" "),a("h4",{attrs:{id:"_2-2-排除字符组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-排除字符组","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.2 排除字符组")]),t._v(" "),a("p",[t._v('纵向模糊匹配，还有一种情形就是，某位字符可以是任何东西，但就不能是"a"、"b"、"c"。')]),t._v(" "),a("p",[t._v("此时就是排除字符组（反义字符组）的概念。例如"),a("code",[t._v("[^abc]")]),t._v('，表示是一个除"a"、"b"、"c"之外的任意一个字符。字符组的第一位放'),a("code",[t._v("^")]),t._v("（脱字符），表示求反的概念。")]),t._v(" "),a("p",[t._v("当然，也有相应的范围表示法。")]),t._v(" "),a("h4",{attrs:{id:"_2-3-常见的简写形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-常见的简写形式","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.3 常见的简写形式")]),t._v(" "),a("p",[t._v("有了字符组的概念后，一些常见的符号我们也就理解了。因为它们都是系统自带的简写形式。")]),t._v(" "),a("p",[a("code",[t._v("\\d")]),t._v("是"),a("code",[t._v("[0-9]")]),t._v("。表示是一位数字。记忆方式：其英文是digit（数字）。")]),t._v(" "),a("p",[a("code",[t._v("\\D")]),t._v("是"),a("code",[t._v("[^0-9]")]),t._v("。表示除数字外的任意字符。")]),t._v(" "),a("p",[a("code",[t._v("\\w")]),t._v("是"),a("code",[t._v("[0-9a-zA-Z_]")]),t._v("。表示数字、大小写字母和下划线。记忆方式：w是word的简写，也称单词字符。")]),t._v(" "),a("p",[a("code",[t._v("\\W")]),t._v("是"),a("code",[t._v("[^0-9a-zA-Z_]")]),t._v("。非单词字符。")]),t._v(" "),a("p",[a("code",[t._v("\\s")]),t._v("是"),a("code",[t._v("[ \\t\\v\\n\\r\\f]")]),t._v("。表示空白符，包括空格、水平制表符、垂直制表符、换行符、回车符、换页符。记忆方式：s是space character的首字母。")]),t._v(" "),a("p",[a("code",[t._v("\\S")]),t._v("是"),a("code",[t._v("[^ \\t\\v\\n\\r\\f]")]),t._v("。 非空白符。")]),t._v(" "),a("p",[a("code",[t._v(".")]),t._v("是"),a("code",[t._v("[^\\n\\r\\u2028\\u2029]")]),t._v("。通配符，表示几乎任意字符。换行符、回车符、行分隔符和段分隔符除外。记忆方式：想想省略号...中的每个点，都可以理解成占位符，表示任何类似的东西。")]),t._v(" "),a("p",[t._v("如果要匹配任意字符怎么办？可以使用"),a("code",[t._v("[\\d\\D]、[\\w\\W]、[\\s\\S]和[^]")]),t._v("中任何的一个。")]),t._v(" "),a("h3",{attrs:{id:"_3-量词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-量词","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 量词")]),t._v(" "),a("p",[t._v("量词也称重复。掌握{m,n}的准确含义后，只需要记住一些简写形式。")]),t._v(" "),a("h4",{attrs:{id:"_3-1-简写形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-简写形式","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.1 简写形式")]),t._v(" "),a("p",[a("code",[t._v("{m,}")]),t._v(" 表示至少出现m次。")]),t._v(" "),a("p",[a("code",[t._v("{m}")]),t._v(" 等价于"),a("code",[t._v("{m,m}")]),t._v("，表示出现m次。")]),t._v(" "),a("p",[a("code",[t._v("?")]),t._v(" 等价于"),a("code",[t._v("{0,1}")]),t._v("，表示出现或者不出现。记忆方式：问号的意思表示，有吗？")]),t._v(" "),a("p",[a("code",[t._v("+")]),t._v(" 等价于"),a("code",[t._v("{1,}")]),t._v("，表示出现至少一次。记忆方式：加号是追加的意思，得先有一个，然后才考虑追加。")]),t._v(" "),a("p",[a("code",[t._v("*")]),t._v(" 等价于"),a("code",[t._v("{0,}")]),t._v("，表示出现任意次，有可能不出现。记忆方式：看看天上的星星，可能一颗没有，可能零散有几颗，可能数也数不过来。")]),t._v(" "),a("h4",{attrs:{id:"_3-2-贪婪匹配和惰性匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-贪婪匹配和惰性匹配","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2 贪婪匹配和惰性匹配")]),t._v(" "),a("p",[t._v("看如下的例子：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{2,5}/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123 1234 12345 123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["123", "1234", "12345", "12345"]')]),t._v("\n")])])]),a("p",[t._v("其中正则"),a("code",[t._v("/\\d{2,5}/")]),t._v("，表示数字连续出现2到5次。会匹配2位、3位、4位、5位连续数字。")]),t._v(" "),a("p",[t._v("但是其是贪婪的，它会尽可能多的匹配。你能给我6个，我就要5个。你能给我3个，我就3要个。反正只要在能力范围内，越多越好。")]),t._v(" "),a("p",[t._v("我们知道有时贪婪不是一件好事（请看文章最后一个例子）。而惰性匹配，就是尽可能少的匹配：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{2,5}?/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123 1234 12345 123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["12", "12", "34", "12", "34", "12", "34", "56"]')]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("/\\d{2,5}?/")]),t._v("表示，虽然2到5次都行，当2个就够的时候，就不在往下尝试了。")]),t._v(" "),a("p",[t._v("通过在量词后面加个问号就能实现惰性匹配，因此所有惰性匹配情形如下：")]),t._v(" "),a("p",[a("code",[t._v("{m,n}?")])]),t._v(" "),a("p",[a("code",[t._v("{m,}?")])]),t._v(" "),a("p",[a("code",[t._v("??")])]),t._v(" "),a("p",[a("code",[t._v("+?")])]),t._v(" "),a("p",[a("code",[t._v("*?")])]),t._v(" "),a("p",[t._v("对惰性匹配的记忆方式是：量词后面加个问号，问一问你知足了吗，你很贪婪吗？")])])}],!1,null,null,null);s.default=r.exports}}]);