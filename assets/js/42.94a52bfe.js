(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{208:function(t,s,e){"use strict";e.r(s);var a=e(0),i=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/6869519303864123399",target:"_blank",rel:"noopener noreferrer"}},[t._v("教程地址"),e("OutboundLink")],1)]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),e("p",[t._v("cd ~/.ssh")]),t._v(" "),t._m(5),t._v(" "),e("p",[t._v("如果能进入到.ssh文件目录下 ，则证明，之前生成过.ssh秘钥，可以直接使用里面的秘钥。")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),e("p",[t._v("最后在.ssh目录下得到了两个文件：id_rsa（私有密钥）和id_rsa.pub（公有密钥）")]),t._v(" "),t._m(9),t._v(" "),e("p",[t._v("使用记事本等软件打开id_rsa.pub文件，将里面的内容复制，粘贴到github的New SSH key")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),e("p",[t._v("请回顾之前在 "),e("a",{attrs:{href:"https://git-scm.com/book/zh/v2/ch00/_basic_merging",target:"_blank",rel:"noopener noreferrer"}},[t._v("分支的合并"),e("OutboundLink")],1),t._v(" 中的一个例子，你会看到开发任务分叉到两个不同分支，又各自提交了更新。")]),t._v(" "),t._m(28),t._v(" "),e("p",[t._v("Figure 35. 分叉的提交历史")]),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),e("p",[t._v("Figure 36. 通过合并操作来整合分叉的历史")]),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._m(39),t._v(" "),t._m(40),t._v(" "),e("p",[t._v("此时，"),e("code",[t._v("C4'")]),t._v(" 指向的快照就和 "),e("a",{attrs:{href:"https://git-scm.com/book/zh/v2/ch00/ebasing-merging-example",target:"_blank",rel:"noopener noreferrer"}},[t._v("the merge example"),e("OutboundLink")],1),t._v(" 中 "),e("code",[t._v("C5")]),t._v(" 指向的快照一模一样了。 这两种整合方法的最终结果没有任何区别，但是变基使得提交历史更加整洁。 你在查看一个经过变基的分支的历史记录时会发现，尽管实际的开发工作是并行的， 但它们看上去就像是串行的一样，提交历史是一条直线没有分叉。")]),t._v(" "),t._m(41),t._v(" "),e("p",[t._v("请注意，无论是通过变基，还是通过三方合并，整合的最终结果所指向的快照始终是一样的，只不过提交历史不同罢了。 变基是将一系列提交按照原有次序依次应用到另一分支上，而合并是把最终结果合在一起。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"git使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git使用","aria-hidden":"true"}},[this._v("#")]),this._v(" git使用")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"配置单个github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置单个github","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置单个github")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"配置用户名和邮箱（如果已经配置，就跳过）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置用户名和邮箱（如果已经配置，就跳过）","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置用户名和邮箱（如果已经配置，就跳过）")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),t._v(" \n　"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx@xx.xxx'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"检查下自己之前有没有已经生成shh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查下自己之前有没有已经生成shh","aria-hidden":"true"}},[this._v("#")]),this._v(" 检查下自己之前有没有已经生成shh")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("注意")]),this._v(" C:/Users/92536/.ssh - windows本地位置")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"生成秘钥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成秘钥","aria-hidden":"true"}},[this._v("#")]),this._v(" 生成秘钥")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("  ssh-keygen -t rsa -C "),s("span",{pre:!0,attrs:{class:"token string"}},[this._v("'xxx@xx.xxx'")]),this._v(" // 配置的邮箱\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("接着按3个回车 :\n"),s("img",{attrs:{src:"https://i.loli.net/2019/04/10/5cadbdb9165a5.png",alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"将公有密钥添加到github-ssh-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将公有密钥添加到github-ssh-keys","aria-hidden":"true"}},[this._v("#")]),this._v(" 将公有密钥添加到github SSH keys")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"验证是否连接成功"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证是否连接成功","aria-hidden":"true"}},[this._v("#")]),this._v(" 验证是否连接成功")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[this._v("ssh")]),this._v(" git@github.com\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"配置多个github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置多个github","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置多个github")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"生成两个新的ssh-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成两个新的ssh-key","aria-hidden":"true"}},[this._v("#")]),this._v(" 生成两个新的SSH key")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[this._v(" ssh-keygen -t rsa -C "),s("span",{pre:!0,attrs:{class:"token string"}},[this._v("'176xxx@xx.xxx'")]),this._v(" // 账号一的注册邮箱\n ssh-keygen -t rsa -C "),s("span",{pre:!0,attrs:{class:"token string"}},[this._v("'925xxx@xx.xxx'")]),this._v(" // 账号二的注册邮箱\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("注意")]),this._v("：重点的是"),s("strong",[this._v("第二次")]),this._v("生成的文件到"),s("strong",[this._v("第二步的时候不要回车-》要修改名字")]),this._v("，比如第一次时id_rsa第二次就是id_rsa_two，命名随意，但是要区分开，不然第二次生成的文件会覆盖第一次生成的文件。\n文件存放地址要注意，第一次和第二次存放地址要一致。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"配置-ssh-config文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-ssh-config文件","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置~/.ssh/config文件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("创建"),s("code",[this._v("config")]),this._v("文件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[this._v("# 该文件用于配置私钥对应的服务器")]),this._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[this._v("# jianglin521")]),this._v("\nHost git@github.com\nHostName github.com\nUser jianglin521\nIdentityFile ~/.ssh/id_rsa\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[this._v("# jianglin2020")]),this._v("\nHost jianglin2020.github.com\nHostName github.com\nUser jianglin2020\nIdentityFile ~/.ssh/id_rsatwo\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"测试-ssh-链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试-ssh-链接","aria-hidden":"true"}},[this._v("#")]),this._v(" 测试 ssh 链接")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[this._v("ssh")]),this._v(" -T git@github.com\n"),s("span",{pre:!0,attrs:{class:"token function"}},[this._v("ssh")]),this._v(" -T git@jianglin2020.github.com\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"github-com代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-com代理","aria-hidden":"true"}},[this._v("#")]),this._v(" github.com代理")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置代理")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.https://github.com.proxy http://127.0.0.1:7890\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看代理")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --get http.https://github.com.proxy\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消代理")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --unset http.https://github.com.proxy\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"git上传项目指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git上传项目指令","aria-hidden":"true"}},[this._v("#")]),this._v(" git上传项目指令")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ol",[e("li",[e("p",[t._v("先进去到项目文件夹，通过命令 git init把这个项目编程git可以管理的仓库\n"),e("code",[t._v("git init")])])]),t._v(" "),e("li",[e("p",[t._v("把文件添加到版本库中，使用命令 git add .添加到暂存区里面（不要忘记后面的 . ，意为添加文件夹下的所有把文件）\n"),e("code",[t._v("git add .")])])]),t._v(" "),e("li",[e("p",[t._v("用命令 git commit告诉git，把文件提交到仓库。引号内为提交说明\n"),e("code",[t._v("git commit -m 'commit'")])])]),t._v(" "),e("li",[e("p",[t._v("关联到远程库\n"),e("code",[t._v("git remote add origin https://xxx/xxx/xx.git")])])]),t._v(" "),e("li",[e("p",[t._v("上传代码之前，要先 pull一下，拉取代码\n"),e("code",[t._v("git pull origin master")])])]),t._v(" "),e("li",[e("p",[t._v("把本地的内容推送到远程仓库，使用 git push命令，实际上是把当前分支master推送到远程。执行此命令狗要求输入用户名、密码，验证通过后即开始上传。\n"),e("code",[t._v("git push -u origin master")])])]),t._v(" "),e("li",[e("p",[t._v("状态查询命令\n"),e("code",[t._v("git status")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"变基"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变基","aria-hidden":"true"}},[this._v("#")]),this._v(" 变基")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 Git 中整合来自不同分支的修改主要有两种方法："),s("code",[this._v("merge")]),this._v(" 以及 "),s("code",[this._v("rebase")]),this._v("。 在本节中我们将学习什么是“变基”，怎样使用“变基”，并将展示该操作的惊艳之处，以及指出在何种情况下你应避免使用它。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"变基的基本操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变基的基本操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 变基的基本操作")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://git-scm.com/book/en/v2/images/basic-rebase-1.png",alt:"分叉的提交历史。"}})])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("之前介绍过，整合分支最容易的方法是 "),e("code",[t._v("merge")]),t._v(" 命令。 它会把两个分支的最新快照（"),e("code",[t._v("C3")]),t._v(" 和 "),e("code",[t._v("C4")]),t._v("）以及二者最近的共同祖先（"),e("code",[t._v("C2")]),t._v("）进行三方合并，合并的结果是生成一个新的快照（并提交）。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://git-scm.com/book/en/v2/images/basic-rebase-2.png",alt:"通过合并操作来整合分叉了的历史。"}})])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("其实，还有一种方法：你可以提取在 "),e("code",[t._v("C4")]),t._v(" 中引入的补丁和修改，然后在 "),e("code",[t._v("C3")]),t._v(" 的基础上应用一次。 在 Git 中，这种操作就叫做 "),e("strong",[t._v("变基（rebase）")]),t._v("。 你可以使用 "),e("code",[t._v("rebase")]),t._v(" 命令将提交到某一分支上的所有修改都移至另一分支上，就好像“重新播放”一样。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在这个例子中，你可以检出 "),s("code",[this._v("experiment")]),this._v(" 分支，然后将它变基到 "),s("code",[this._v("master")]),this._v(" 分支上：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$ git checkout experiment\n$ git rebase master\nFirst, rewinding head to replay your work on top of it...\nApplying: added staged command\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("它的原理是首先找到这两个分支（即当前分支 "),e("code",[t._v("experiment")]),t._v("、变基操作的目标基底分支 "),e("code",[t._v("master")]),t._v("） 的最近共同祖先 "),e("code",[t._v("C2")]),t._v("，然后对比当前分支相对于该祖先的历次提交，提取相应的修改并存为临时文件， 然后将当前分支指向目标基底 "),e("code",[t._v("C3")]),t._v(", 最后以此将之前另存为临时文件的修改依序应用。 （译注：写明了 commit id，以便理解，下同）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://git-scm.com/book/en/v2/images/basic-rebase-3.png",alt:"将  中的修改变基到  上。"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Figure 37. 将 "),s("code",[this._v("C4")]),this._v(" 中的修改变基到 "),s("code",[this._v("C3")]),this._v(" 上")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("现在回到 "),s("code",[this._v("master")]),this._v(" 分支，进行一次快进合并。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$ git checkout master\n$ git merge experiment\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://git-scm.com/book/en/v2/images/basic-rebase-4.png",alt:" 分支的快进合并。"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Figure 38. "),s("code",[this._v("master")]),this._v(" 分支的快进合并")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("一般我们这样做的目的是为了确保在向远程分支推送时能保持提交历史的整洁——例如向某个其他人维护的项目贡献代码时。 在这种情况下，你首先在自己的分支里进行开发，当开发完成时你需要先将你的代码变基到 "),s("code",[this._v("origin/master")]),this._v(" 上，然后再向主项目提交修改。 这样的话，该项目的维护者就不再需要进行整合工作，只需要快进合并便可。")])}],!1,null,null,null);s.default=i.exports}}]);